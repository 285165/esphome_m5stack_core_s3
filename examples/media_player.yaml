esphome:
  name: m5_core_s3_media_player
  min_version: 2023.12.7
  platformio_options:
    board_build.flash_mode: dio
    board_upload.maximum_size: 16777216

  on_boot:
      priority: 600
      then:
        - component.update: m5cores3_lcd


esp32:
  board: esp32-s3-devkitc-1
  flash_size: 16MB
  framework:
    type: esp-idf
    sdkconfig_options:
      # need to set a s3 compatible board for the adf-sdk to compile
      # board specific code is not used though
      CONFIG_ESP32_S3_BOX_BOARD: "y"
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB:      "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B:  "y"

      #CONFIG_LOG_DEFAULT_LEVEL_DEBUG: "y"
      #CONFIG_LOG_DEFAULT_LEVEL: "4"

psram:
  mode: quad
  speed: 80MHz


external_components:
  - source:
      type: git
      url: https://github.com/gnumpi/esphome_m5stack_core_s3
      #type: local
      #path: /Users/siekmann/Privat/Projects/espHome/M5Stack_Core_S3/esphome/components
    components: [ esp32_m5stack_core_s3, aw9523 ]

  - source:
      type: git
      url: https://github.com/gnumpi/esphome_audio
      ref: m5_core_s3
      #type: local
      #path: /Users/siekmann/Privat/Projects/espHome/esphome_audio/esphome/components
    components: [ adf_pipeline, i2s_audio ]


# Enable logging
logger:
  deassert_rts_dtr: true
  level: DEBUG #VERBOSE

packages:
  wifi: !include common/wifi.yaml

api:

i2c:
  - id: bus_a
    sda: GPIO12
    scl: GPIO11
    scan: True

spi:
  clk_pin: GPIO36
  mosi_pin: GPIO37


i2s_audio:
  - id: i2s_0
    i2s_lrclk_pin: GPIO33
    i2s_bclk_pin: GPIO34
    #i2s_mclk_pin: GPIO0

aw9523:
  id: aw9523_1
  address: 0x58

esp32_m5stack_core_s3:

globals:
  - id: speaker_volume
    type: int
    restore_value: no
    initial_value: '5'

  - id: mp_state
    type: int
    restore_value: no
    initial_value: '0'


image:
  - file: mdi:volume-minus
    id: volume_minus
    resize: 80x80
  - file: mdi:volume-plus
    id: volume_plus
    resize: 80x80
  - file: mdi:play
    id: play
    resize: 100x100
  - file: mdi:pause
    id: icon_paused
    resize: 100x100

font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 36

display:
  - platform: ili9xxx
    id: m5cores3_lcd
    model: M5Stack
    dimensions: 320x240
    cs_pin: GPIO3
    dc_pin: GPIO35
    reset_pin:
      aw9523: aw9523_1
      port: 1
      pin: 1
      mode:
        output: true

    update_interval: never
    lambda: |-
        auto white = Color(255,255,255);
        if( id( mp_state ) ){
          it.image(120, 50, id( icon_paused ));
        }
        else{
          it.image(120, 50, id( play ));
        }
        it.image(0, 162, id(volume_minus));
        it.printf(150, 180, id(roboto), white, "%d", id(speaker_volume));
        it.image(240, 162, id(volume_plus));



touchscreen:
  - platform: ft63x6
    i2c_id: bus_a
    update_interval: 20ms
    on_touch:
      - logger.log:
          format: Touch %d at (%d, %d)
          args: [touch.id, touch.x, touch.y]

# expose the i2s components as pipeline elements
adf_pipeline:
  - platform: i2s_audio
    type: aw88298
    id: adf_i2s_out
    i2s_audio_id: i2s_0
    i2s_dout_pin: GPIO13


media_player:
  - platform: adf_pipeline
    id: adf_media_player
    name: s3-dev_media_player
    internal: false
    pipeline:
      - self
      - resampler
      - adf_i2s_out

    on_play:
      - lambda: id(mp_state) = 1;
      - component.update: m5cores3_lcd
    on_idle:
      - lambda: id(mp_state) = 0;
      - component.update: m5cores3_lcd

binary_sensor:
  - platform: touchscreen
    name: Volume Minus
    x_min: 0
    x_max: 100
    y_min: 89
    y_max: 120
    on_press:
      then:
        - logger.log: "Volume Minus pressed"
        - lambda: |-
            if (id(speaker_volume) > 0) {
              id(speaker_volume) -= 1;
            }
        - component.update: m5cores3_lcd
        - script.execute: set_volume

  - platform: touchscreen
    name: Volume Plus
    x_min: 260
    x_max: 320
    y_min: 89
    y_max: 120
    on_press:
      then:
        - logger.log: "Volume Plus pressed"
        - lambda: |-
            if (id(speaker_volume) < 10) {
              id(speaker_volume) += 1;
            }
        - component.update: m5cores3_lcd
        - script.execute: set_volume

  - platform: touchscreen
    name: Play Pause
    x_min: 120
    x_max: 220
    y_min: 40
    y_max: 80
    on_press:
      then:
        - if:
            condition:
              media_player.is_idle:
            then:
              - media_player.play
            else:
              - media_player.stop

        - logger.log: "Play Paused pressed"


script:
  - id: set_volume
    then:
      - media_player.volume_set:
          volume: !lambda return 0.5 + id(speaker_volume) * 0.05 ;
